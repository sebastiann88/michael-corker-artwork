"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/tinacms";
exports.ids = ["vendor-chunks/tinacms"];
exports.modules = {

/***/ "(ssr)/./node_modules/tinacms/dist/client.mjs":
/*!**********************************************!*\
  !*** ./node_modules/tinacms/dist/client.mjs ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TINA_HOST: () => (/* binding */ TINA_HOST),\n/* harmony export */   TinaClient: () => (/* binding */ TinaClient),\n/* harmony export */   createClient: () => (/* binding */ createClient)\n/* harmony export */ });\n/* harmony import */ var fetch_ponyfill__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fetch-ponyfill */ \"(ssr)/./node_modules/fetch-ponyfill/fetch-node.js\");\n\nconst { fetch: fetchPonyfillFN, Headers: HeadersPonyfill } = fetch_ponyfill__WEBPACK_IMPORTED_MODULE_0__();\nconst fetchDefined = typeof fetch === \"undefined\" ? fetchPonyfillFN : fetch;\nconst HeadersDefined = typeof Headers === \"undefined\" ? HeadersPonyfill : Headers;\nconst TINA_HOST = \"content.tinajs.io\";\nclass TinaClient {\n  constructor({\n    token,\n    url,\n    queries,\n    errorPolicy\n  }) {\n    this.apiUrl = url;\n    this.readonlyToken = token == null ? void 0 : token.trim();\n    this.queries = queries(this);\n    this.errorPolicy = errorPolicy || \"throw\";\n  }\n  async request({ errorPolicy, ...args }, options) {\n    var _a;\n    const errorPolicyDefined = errorPolicy || this.errorPolicy;\n    const headers = new HeadersDefined();\n    if (this.readonlyToken) {\n      headers.append(\"X-API-KEY\", this.readonlyToken);\n    }\n    headers.append(\"Content-Type\", \"application/json\");\n    if (options == null ? void 0 : options.fetchOptions) {\n      if ((_a = options == null ? void 0 : options.fetchOptions) == null ? void 0 : _a.headers) {\n        Object.entries(options.fetchOptions.headers).forEach(([key, value]) => {\n          headers.append(key, value);\n        });\n      }\n    }\n    const { headers: _, ...providedFetchOptions } = (options == null ? void 0 : options.fetchOptions) || {};\n    const bodyString = JSON.stringify({\n      query: args.query,\n      variables: (args == null ? void 0 : args.variables) || {}\n    });\n    const url = (args == null ? void 0 : args.url) || this.apiUrl;\n    const optionsObject = {\n      method: \"POST\",\n      headers,\n      body: bodyString,\n      redirect: \"follow\",\n      ...providedFetchOptions\n    };\n    const res = await fetchDefined(url, optionsObject);\n    if (!res.ok) {\n      let additionalInfo = \"\";\n      if (res.status === 401) {\n        additionalInfo = \"Please check that your client ID, URL and read only token are configured properly.\";\n      }\n      throw new Error(\n        `Server responded with status code ${res.status}, ${res.statusText}. ${additionalInfo ? additionalInfo : \"\"} Please see our FAQ for more information: https://tina.io/docs/errors/faq/`\n      );\n    }\n    const json = await res.json();\n    if (json.errors && errorPolicyDefined === \"throw\") {\n      throw new Error(\n        `Unable to fetch, please see our FAQ for more information: https://tina.io/docs/errors/faq/\n        Errors: \n\t${json.errors.map((error) => error.message).join(\"\\n\")}`\n      );\n    }\n    return {\n      data: json == null ? void 0 : json.data,\n      errors: (json == null ? void 0 : json.errors) || null,\n      query: args.query\n    };\n  }\n}\nfunction createClient(args) {\n  const client = new TinaClient(args);\n  return client;\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGluYWNtcy9kaXN0L2NsaWVudC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUEyQztBQUMzQyxRQUFRLG1EQUFtRCxFQUFFLDJDQUFhO0FBQzFFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHNCQUFzQjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxZQUFZLHNDQUFzQztBQUNsRDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDLFdBQVcsSUFBSSxlQUFlLElBQUksc0NBQXNDO0FBQ3JIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRyxxREFBcUQ7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFLRSIsInNvdXJjZXMiOlsid2VicGFjazovL21pY2hhZWwtY29ya2VyLWFydHdvcmsvLi9ub2RlX21vZHVsZXMvdGluYWNtcy9kaXN0L2NsaWVudC5tanM/MDc0MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZmV0Y2hQb255ZmlsbCBmcm9tIFwiZmV0Y2gtcG9ueWZpbGxcIjtcbmNvbnN0IHsgZmV0Y2g6IGZldGNoUG9ueWZpbGxGTiwgSGVhZGVyczogSGVhZGVyc1BvbnlmaWxsIH0gPSBmZXRjaFBvbnlmaWxsKCk7XG5jb25zdCBmZXRjaERlZmluZWQgPSB0eXBlb2YgZmV0Y2ggPT09IFwidW5kZWZpbmVkXCIgPyBmZXRjaFBvbnlmaWxsRk4gOiBmZXRjaDtcbmNvbnN0IEhlYWRlcnNEZWZpbmVkID0gdHlwZW9mIEhlYWRlcnMgPT09IFwidW5kZWZpbmVkXCIgPyBIZWFkZXJzUG9ueWZpbGwgOiBIZWFkZXJzO1xuY29uc3QgVElOQV9IT1NUID0gXCJjb250ZW50LnRpbmFqcy5pb1wiO1xuY2xhc3MgVGluYUNsaWVudCB7XG4gIGNvbnN0cnVjdG9yKHtcbiAgICB0b2tlbixcbiAgICB1cmwsXG4gICAgcXVlcmllcyxcbiAgICBlcnJvclBvbGljeVxuICB9KSB7XG4gICAgdGhpcy5hcGlVcmwgPSB1cmw7XG4gICAgdGhpcy5yZWFkb25seVRva2VuID0gdG9rZW4gPT0gbnVsbCA/IHZvaWQgMCA6IHRva2VuLnRyaW0oKTtcbiAgICB0aGlzLnF1ZXJpZXMgPSBxdWVyaWVzKHRoaXMpO1xuICAgIHRoaXMuZXJyb3JQb2xpY3kgPSBlcnJvclBvbGljeSB8fCBcInRocm93XCI7XG4gIH1cbiAgYXN5bmMgcmVxdWVzdCh7IGVycm9yUG9saWN5LCAuLi5hcmdzIH0sIG9wdGlvbnMpIHtcbiAgICB2YXIgX2E7XG4gICAgY29uc3QgZXJyb3JQb2xpY3lEZWZpbmVkID0gZXJyb3JQb2xpY3kgfHwgdGhpcy5lcnJvclBvbGljeTtcbiAgICBjb25zdCBoZWFkZXJzID0gbmV3IEhlYWRlcnNEZWZpbmVkKCk7XG4gICAgaWYgKHRoaXMucmVhZG9ubHlUb2tlbikge1xuICAgICAgaGVhZGVycy5hcHBlbmQoXCJYLUFQSS1LRVlcIiwgdGhpcy5yZWFkb25seVRva2VuKTtcbiAgICB9XG4gICAgaGVhZGVycy5hcHBlbmQoXCJDb250ZW50LVR5cGVcIiwgXCJhcHBsaWNhdGlvbi9qc29uXCIpO1xuICAgIGlmIChvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLmZldGNoT3B0aW9ucykge1xuICAgICAgaWYgKChfYSA9IG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMuZmV0Y2hPcHRpb25zKSA9PSBudWxsID8gdm9pZCAwIDogX2EuaGVhZGVycykge1xuICAgICAgICBPYmplY3QuZW50cmllcyhvcHRpb25zLmZldGNoT3B0aW9ucy5oZWFkZXJzKS5mb3JFYWNoKChba2V5LCB2YWx1ZV0pID0+IHtcbiAgICAgICAgICBoZWFkZXJzLmFwcGVuZChrZXksIHZhbHVlKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuICAgIGNvbnN0IHsgaGVhZGVyczogXywgLi4ucHJvdmlkZWRGZXRjaE9wdGlvbnMgfSA9IChvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLmZldGNoT3B0aW9ucykgfHwge307XG4gICAgY29uc3QgYm9keVN0cmluZyA9IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgIHF1ZXJ5OiBhcmdzLnF1ZXJ5LFxuICAgICAgdmFyaWFibGVzOiAoYXJncyA9PSBudWxsID8gdm9pZCAwIDogYXJncy52YXJpYWJsZXMpIHx8IHt9XG4gICAgfSk7XG4gICAgY29uc3QgdXJsID0gKGFyZ3MgPT0gbnVsbCA/IHZvaWQgMCA6IGFyZ3MudXJsKSB8fCB0aGlzLmFwaVVybDtcbiAgICBjb25zdCBvcHRpb25zT2JqZWN0ID0ge1xuICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgIGhlYWRlcnMsXG4gICAgICBib2R5OiBib2R5U3RyaW5nLFxuICAgICAgcmVkaXJlY3Q6IFwiZm9sbG93XCIsXG4gICAgICAuLi5wcm92aWRlZEZldGNoT3B0aW9uc1xuICAgIH07XG4gICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2hEZWZpbmVkKHVybCwgb3B0aW9uc09iamVjdCk7XG4gICAgaWYgKCFyZXMub2spIHtcbiAgICAgIGxldCBhZGRpdGlvbmFsSW5mbyA9IFwiXCI7XG4gICAgICBpZiAocmVzLnN0YXR1cyA9PT0gNDAxKSB7XG4gICAgICAgIGFkZGl0aW9uYWxJbmZvID0gXCJQbGVhc2UgY2hlY2sgdGhhdCB5b3VyIGNsaWVudCBJRCwgVVJMIGFuZCByZWFkIG9ubHkgdG9rZW4gYXJlIGNvbmZpZ3VyZWQgcHJvcGVybHkuXCI7XG4gICAgICB9XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgIGBTZXJ2ZXIgcmVzcG9uZGVkIHdpdGggc3RhdHVzIGNvZGUgJHtyZXMuc3RhdHVzfSwgJHtyZXMuc3RhdHVzVGV4dH0uICR7YWRkaXRpb25hbEluZm8gPyBhZGRpdGlvbmFsSW5mbyA6IFwiXCJ9IFBsZWFzZSBzZWUgb3VyIEZBUSBmb3IgbW9yZSBpbmZvcm1hdGlvbjogaHR0cHM6Ly90aW5hLmlvL2RvY3MvZXJyb3JzL2ZhcS9gXG4gICAgICApO1xuICAgIH1cbiAgICBjb25zdCBqc29uID0gYXdhaXQgcmVzLmpzb24oKTtcbiAgICBpZiAoanNvbi5lcnJvcnMgJiYgZXJyb3JQb2xpY3lEZWZpbmVkID09PSBcInRocm93XCIpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgYFVuYWJsZSB0byBmZXRjaCwgcGxlYXNlIHNlZSBvdXIgRkFRIGZvciBtb3JlIGluZm9ybWF0aW9uOiBodHRwczovL3RpbmEuaW8vZG9jcy9lcnJvcnMvZmFxL1xuICAgICAgICBFcnJvcnM6IFxuXHQke2pzb24uZXJyb3JzLm1hcCgoZXJyb3IpID0+IGVycm9yLm1lc3NhZ2UpLmpvaW4oXCJcXG5cIil9YFxuICAgICAgKTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgIGRhdGE6IGpzb24gPT0gbnVsbCA/IHZvaWQgMCA6IGpzb24uZGF0YSxcbiAgICAgIGVycm9yczogKGpzb24gPT0gbnVsbCA/IHZvaWQgMCA6IGpzb24uZXJyb3JzKSB8fCBudWxsLFxuICAgICAgcXVlcnk6IGFyZ3MucXVlcnlcbiAgICB9O1xuICB9XG59XG5mdW5jdGlvbiBjcmVhdGVDbGllbnQoYXJncykge1xuICBjb25zdCBjbGllbnQgPSBuZXcgVGluYUNsaWVudChhcmdzKTtcbiAgcmV0dXJuIGNsaWVudDtcbn1cbmV4cG9ydCB7XG4gIFRJTkFfSE9TVCxcbiAgVGluYUNsaWVudCxcbiAgY3JlYXRlQ2xpZW50XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tinacms/dist/client.mjs\n");

/***/ })

};
;